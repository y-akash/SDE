private static void mergeSortHelper(int[] input, int startIndex, int endIndex){
        if (startIndex >= endIndex)	return;
        int mid = (startIndex + endIndex) / 2;
        mergeSortHelper(input, startIndex, mid);
        mergeSortHelper(input, mid+1, endIndex);
        merge(input, startIndex, mid, endIndex);
    }
    
private static void merge(int[] input, int startIndex, int mid, int endIndex){
    int i = startIndex; 
    int j = mid+1;
    int k = 0;
    int[] temp = new int[endIndex - startIndex + 1];
    while(i <= mid && j<= endIndex){
        if (input[i] <= input[j]) 
            temp[k++] = input[i++];
        else
            temp[k++] = input[j++];
    }
    while(i<=mid)
        temp[k++] = input[i++];
    while(j<=endIndex)
        temp[k++] = input[j++];
    for (i = 0; i< temp.length; i++)
        input[startIndex++] = temp[i];
}